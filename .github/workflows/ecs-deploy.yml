# name: AWS ECS Deploy Pipeline

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main


# jobs:
#   # build-and-test:
#   #   runs-on: ubuntu-latest

#   #   services: 
#   #     docker:
#   #       image: docker:19.03.12
#   #       options: --privileged
#   #       ports:
#   #         - 5000:5000
#   #   steps:
#   #     - name: Checkout repository
#   #       uses: actions/checkout@v2
        
#   #     - name: Set up Docker Buildx
#   #       uses: docker/setup-buildx-action@v2

#   #     - name: Build and push Docker images
#   #       run: |
#   #         docker build -t swiftsci-backend .
#   #         docker run --name swiftsci-backend -d -p 5000:5000 swiftsci-backend
#   #     - name: Close the Docker Container
#   #       run: |
#   #         docker stop swiftsci-backend

#   deploy:
#     # needs: build-and-test
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v2
      
#     - name: Configure AWS credentials
#       uses: aws-actions/configure-aws-credentials@v2
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
#         aws-secret-access-key: ${{ secrets.AWS_ACCESS_SECRET_KEY }}
#         aws-region: ${{ secrets.AWS_REGION }}

#     - name: Login to Amazon ECR Public
#       id: login-ecr-public
#       run: |
#         aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/j6k4z2y5


#     - name: Build, tag, and push docker image to Amazon ECR Public
#       run: |
#         docker build -t swiftsci .
#         docker tag swiftsci:latest public.ecr.aws/j6k4z2y5/swiftsci:latest
#         docker push public.ecr.aws/j6k4z2y5/swiftsci:latest

#     - name: Register ECS
#       run: |
#         docker build -t swiftsci .
#         docker tag swiftsci:latest public.ecr.aws/j6k4z2y5/swiftsci:latest
#         docker push public.ecr.aws/j6k4z2y5/swiftsci:latest


        


